name: RDP Hyper Optimized BR v2 (Instant PT-BR)

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
      - name: üß± Habilitar RDP + Desativar NLA
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' `
                           -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                           -Name "UserAuthentication" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                           -Name "SecurityLayer" -Value 0 -Force
          netsh advfirewall firewall add rule name="RDP-Allow" dir=in action=allow protocol=TCP localport=3389
          Restart-Service -Name TermService -Force

      - name: üë§ Criar Usu√°rio RDP com Autologin
        run: |
          $username = "RDP"
          $password = "882188Adr"
          net user $username $password /add
          net localgroup administrators $username /add
          net localgroup "Remote Desktop Users" $username /add

          # Ativar login autom√°tico
          Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon" `
            -Name "AutoAdminLogon" -Value "1" -Type String
          Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon" `
            -Name "DefaultUserName" -Value $username -Type String
          Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon" `
            -Name "DefaultPassword" -Value $password -Type String

      - name: üåé Configurar Idioma, Regi√£o e Teclado (PT-BR Instant√¢neo)
        run: |
          # Idioma e regi√£o
          Set-WinSystemLocale -SystemLocale pt-BR
          Set-WinUILanguageOverride -Language pt-BR
          Set-WinUserLanguageList -LanguageList pt-BR -Force
          Set-Culture pt-BR
          Set-WinHomeLocation -GeoId 31
          Set-WinCultureFromLanguageListOptOut -OptOut 0

          # Formatos de data, hora e moeda
          Set-Culture -CultureInfo "pt-BR"

          # Teclado ABNT2 (sem reiniciar)
          $LangList = New-WinUserLanguageList pt-BR
          $LangList[0].InputMethodTips.Add("0416:00010416")
          Set-WinUserLanguageList $LangList -Force

          # Fuso hor√°rio: Bras√≠lia
          Set-TimeZone -Id "E. South America Standard Time"

          # Persistir idioma e layout no registro do usu√°rio atual
          reg add "HKCU\Control Panel\International" /v LocaleName /t REG_SZ /d "pt-BR" /f
          reg add "HKCU\Control Panel\International" /v Locale /t REG_SZ /d "00000416" /f
          reg add "HKCU\Control Panel\International" /v sShortDate /t REG_SZ /d "dd/MM/yyyy" /f
          reg add "HKCU\Control Panel\International" /v sTimeFormat /t REG_SZ /d "HH:mm:ss" /f
          reg add "HKCU\Keyboard Layout\Preload" /v 1 /t REG_SZ /d "00000416" /f
          reg add "HKCU\Keyboard Layout\Substitutes" /v 00000416 /t REG_SZ /d "00010416" /f
          reg add "HKCU\Control Panel\Desktop" /v PreferredUILanguages /t REG_MULTI_SZ /d "pt-BR" /f

          # Aplicar tamb√©m na tela de login (usu√°rio padr√£o)
          reg add "HKU\.DEFAULT\Control Panel\International" /v LocaleName /t REG_SZ /d "pt-BR" /f
          reg add "HKU\.DEFAULT\Keyboard Layout\Preload" /v 1 /t REG_SZ /d "00000416" /f
          reg add "HKU\.DEFAULT\Keyboard Layout\Substitutes" /v 00000416 /t REG_SZ /d "00010416" /f

          # Aplicar instantaneamente (sem reiniciar)
          rundll32.exe user32.dll,UpdatePerUserSystemParameters
          Write-Host "‚úÖ Configura√ß√µes de idioma, teclado e regi√£o aplicadas instantaneamente (PT-BR, ABNT2, Bras√≠lia)"

      - name: üéÆ Instalar Drivers NVIDIA GPU
        run: |
          $url = "https://us.download.nvidia.com/Windows/536.23/536.23-desktop-win10-win11-64bit-international-dch-whql.exe"
          $driver = "$env:TEMP\nvidia_driver.exe"
          Invoke-WebRequest -Uri $url -OutFile $driver
          Start-Process -FilePath $driver -ArgumentList "-s","-noreboot" -Wait
          Remove-Item $driver -Force

      - name: ‚ö° Otimizar Desempenho do Windows
        run: |
          # Efeitos visuais
          reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\VisualEffects" /v VisualFXSetting /t REG_DWORD /d 2 /f
          Set-ItemProperty "HKCU:\Control Panel\Desktop" -Name "UserPreferencesMask" -Value ([byte[]](0x90,0x12,0x03,0x80))
          Set-ItemProperty "HKCU:\Control Panel\Desktop" -Name "MenuShowDelay" -Value "0"
          Set-ItemProperty "HKCU:\Control Panel\Desktop" -Name "WaitToKillAppTimeout" -Value "2000"
          Set-ItemProperty "HKCU:\Control Panel\Desktop" -Name "HungAppTimeout" -Value "1000"

          # Desativar servi√ßos desnecess√°rios
          $services = "DiagTrack","WSearch","Spooler"
          foreach ($s in $services) {
              Stop-Service -Name $s -ErrorAction SilentlyContinue
              Set-Service -Name $s -StartupType Disabled -ErrorAction SilentlyContinue
          }

          # Transpar√™ncias e efeitos extras
          reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Themes\Personalize" /v EnableTransparency /t REG_DWORD /d 0 /f
          reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Themes\Personalize" /v ColorPrevalence /t REG_DWORD /d 0 /f

      - name: üåê Instalar Tailscale
        run: |
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-latest-amd64.msi"
          $installerPath = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath
          Start-Process msiexec.exe -ArgumentList "/i", "`"$installerPath`"", "/quiet", "/norestart" -Wait
          Remove-Item $installerPath -Force

      - name: üîó Conectar ao Tailscale
        run: |
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-runner-$env:GITHUB_RUN_ID
          $tsIP = $null
          for ($i=0; $i -lt 10; $i++) {
            $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
            if ($tsIP) { break }
            Start-Sleep -Seconds 5
          }
          if (-not $tsIP) { throw "No Tailscale IP found" }
          echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV

      - name: üñ•Ô∏è Mostrar Informa√ß√µes de Acesso
        run: |
          Write-Host "`n=== ACESSO RDP ==="
          Write-Host "Endere√ßo: $env:TAILSCALE_IP"
          Write-Host "Usu√°rio: RDP"
          Write-Host "Senha: 882188Adr"
          Write-Host "üåé Regi√£o: Brasil (pt-BR)"
          Write-Host "‚å®Ô∏è Teclado: ABNT2"
          Write-Host "‚è∞ Fuso: Bras√≠lia (GMT-3)"
          Write-Host "‚úÖ GPU driver instalado"
          Write-Host "‚úÖ Otimiza√ß√£o completa"
          Write-Host "‚úÖ Idioma PT-BR ativo instantaneamente"
          Write-Host "‚úÖ Tailscale pronto"
          Write-Host "=============================="
          while ($true) { Start-Sleep -Seconds 300 }
