name: RDP Hyper Optimized BR (Win10 Base)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *"  # reinicia a cada 6h

jobs:
  secure-rdp:
    runs-on: windows-2022
    timeout-minutes: 360

    steps:  
      - name: Enable RDP + Disable NLA  
        run: |  
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' `
                           -Name "fDenyTSConnections" -Value 0 -Force  
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                           -Name "UserAuthentication" -Value 0 -Force  
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                           -Name "SecurityLayer" -Value 0 -Force  
          netsh advfirewall firewall add rule name="RDP-Allow" dir=in action=allow protocol=TCP localport=3389  
          Restart-Service -Name TermService -Force  

      - name: Create Autologin User  
        run: |  
          $username = "RDP"  
          $password = "882188Adr"  
          net user $username $password /add  
          net localgroup administrators $username /add  
          net localgroup "Remote Desktop Users" $username /add  

          # Ativar autologin  
          Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon" `
            -Name "AutoAdminLogon" -Value "1" -Type String  
          Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon" `
            -Name "DefaultUserName" -Value $username -Type String  
          Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon" `
            -Name "DefaultPassword" -Value $password -Type String  

      - name: Configure Locale and Timezone (Brazil)  
        run: |  
          Set-WinSystemLocale -SystemLocale pt-BR  
          Set-WinUserLanguageList -LanguageList pt-BR -Force  
          Set-WinUILanguageOverride -Language pt-BR  
          Set-WinCultureFromLanguageListOptOut -OptOut 0  

          Set-TimeZone -Id "E. South America Standard Time"  

          $LangList = New-WinUserLanguageList pt-BR  
          $LangList[0].InputMethodTips.Add("0416:00010416")  
          Set-WinUserLanguageList $LangList -Force  

      - name: Install NVIDIA GPU Drivers  
        run: |  
          $url = "https://us.download.nvidia.com/Windows/536.23/536.23-desktop-win10-win11-64bit-international-dch-whql.exe"  
          $driver = "$env:TEMP\nvidia_driver.exe"  
          Invoke-WebRequest -Uri $url -OutFile $driver  
          Start-Process -FilePath $driver -ArgumentList "-s","-noreboot" -Wait  
          Remove-Item $driver -Force  

      - name: Ultra Optimize Windows Performance  
        run: |  
          reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\VisualEffects" /v VisualFXSetting /t REG_DWORD /d 2 /f  
          Set-ItemProperty "HKCU:\Control Panel\Desktop" -Name "UserPreferencesMask" -Value ([byte[]](0x90,0x12,0x03,0x80))  
          Set-ItemProperty "HKCU:\Control Panel\Desktop" -Name "MenuShowDelay" -Value "0"  
          Set-ItemProperty "HKCU:\Control Panel\Desktop" -Name "WaitToKillAppTimeout" -Value "2000"  
          Set-ItemProperty "HKCU:\Control Panel\Desktop" -Name "HungAppTimeout" -Value "1000"  

          $services = "DiagTrack","WSearch","Spooler"  
          foreach ($s in $services) {  
              Stop-Service -Name $s -ErrorAction SilentlyContinue  
              Set-Service -Name $s -StartupType Disabled -ErrorAction SilentlyContinue  
          }  

          reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Themes\Personalize" /v EnableTransparency /t REG_DWORD /d 0 /f  
          reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Themes\Personalize" /v ColorPrevalence /t REG_DWORD /d 0 /f  

      - name: Install Tailscale  
        run: |  
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-latest-amd64.msi"  
          $installerPath = "$env:TEMP\tailscale.msi"  
          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath  
          Start-Process msiexec.exe -ArgumentList "/i", "`"$installerPath`"", "/quiet", "/norestart" -Wait  
          Remove-Item $installerPath -Force  

      - name: Establish Tailscale Connection  
        run: |  
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-runner-$env:GITHUB_RUN_ID  
          $tsIP = $null  
          for ($i=0; $i -lt 10; $i++) {  
            $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4  
            if ($tsIP) { break }  
            Start-Sleep -Seconds 5  
          }  
          if (-not $tsIP) { throw "No Tailscale IP found" }  
          echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV  

      - name: Show Access Info  
        run: |  
          Write-Host "`n=== RDP ACCESS ==="  
          Write-Host "Address: $env:TAILSCALE_IP"  
          Write-Host "Username: RDP"  
          Write-Host "Password: 882188Adr"  
          Write-Host "üåé Regi√£o: Brasil (pt-BR)"  
          Write-Host "‚è∞ Fuso hor√°rio: Bras√≠lia (GMT-3)"  
          Write-Host "‚å®Ô∏è Teclado: ABNT2"  
          Write-Host "‚úÖ GPU driver installed"  
          Write-Host "‚úÖ Windows ultra optimized"  
          Write-Host "‚úÖ Tailscale ready"  
          Write-Host "==================`n"  

          # Manter workflow vivo at√© o timeout
          while ($true) { Start-Sleep -Seconds 300 }
