name: cloud-gaming

on: workflow_dispatch

jobs:
  build:
    runs-on: windows-2022
    timeout-minutes: 360   # Máximo permitido, em vez de "infinity"

    steps:
    - name: Configure Core RDP Settings
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name 'fDenyTSConnections' -Value 0 -Force
        Enable-NetFirewallRule -DisplayGroup 'Remote Desktop'
        Set-Service -Name TermService -StartupType Automatic
        Restart-Service -Name TermService

    - name: Create RDP User with Fixed Password
      run: |
        $Username = "RDP"
        $Password = "882188Adr" | ConvertTo-SecureString -AsPlainText -Force
        if (-not (Get-LocalUser -Name $Username -ErrorAction SilentlyContinue)) {
          New-LocalUser $Username -Password $Password -FullName "RDP User" -Description "Cloud Gaming User"
        } else {
          Set-LocalUser -Name $Username -Password $Password
        }
        Add-LocalGroupMember -Group "Administrators" -Member $Username
        Add-LocalGroupMember -Group "Remote Desktop Users" -Member $Username
        Write-Host "RDP User: $Username"
        Write-Host "Password: 882188Adr"

    - name: Install Tailscale
      run: |
        $Url = "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi"
        $Out = "$env:TEMP\tailscale.msi"
        Invoke-WebRequest -Uri $Url -OutFile $Out
        Start-Process msiexec.exe -Wait -ArgumentList "/i `"$Out`" /quiet /qn /norestart"

    - name: Establish Tailscale Connection
      run: |
        & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-runner-${{ github.run_id }}

    - name: Verify RDP Accessibility
      run: |
        $tailscaleIP = (& "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4).Trim()
        Write-Host "Tailscale IP: $tailscaleIP"

    - name: Optimize System for Gaming
      run: |
        # Ajuste visual para performance
        Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "UserPreferencesMask" -Value ([byte[]](0x90,0x12,0x03,0x80,0x10,0x00,0x00,0x00))

        # Ativar Game Mode se chave existir
        if (Test-Path "HKLM:\SOFTWARE\Microsoft\GameBar") {
          Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\GameBar" -Name "AutoGameModeEnabled" -Value 1 -Force
          Write-Host "Game Mode enabled."
        } else {
          Write-Host "GameBar not found, skipping Game Mode tweak."
        }

        # Tweaks TCP para reduzir latência
        netsh int tcp set global autotuninglevel=normal
        netsh int tcp set global rss=enabled
        netsh int tcp set global ecncapability=enabled
        netsh int tcp set global dca=enabled

        # Prioridade para apps comuns de jogo
        $procs = "explorer","Steam","EpicGamesLauncher"
        foreach ($p in $procs) {
          if (Get-Process -Name $p -ErrorAction SilentlyContinue) {
            (Get-Process -Name $p).PriorityClass = "High"
          }
        }

        # Desativar updates automáticos
        Set-Service -Name wuauserv -StartupType Disabled -ErrorAction SilentlyContinue
        Stop-Service -Name wuauserv -Force -ErrorAction SilentlyContinue

    - name: Install Common Gaming Applications
      run: |
        choco install googlechrome discord 7zip -y

    - name: Install Visual C++ Runtimes
      run: |
        choco install vcredist-all -y

    - name: Install Gaming Platforms
      run: |
        choco install steam epicgameslauncher -y

    - name: Show RDP Connection Info
      run: |
        $tailscaleIP = (& "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4).Trim()
        Write-Host "======================================="
        Write-Host "✅ RDP Setup Complete!"
        Write-Host "➡️ IP: $tailscaleIP"
        Write-Host "➡️ User: RDP"
        Write-Host "➡️ Password: 882188Adr"
        Write-Host "======================================="
