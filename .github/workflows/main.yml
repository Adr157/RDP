name: Cloud Gaming RDP

on:
  workflow_dispatch:

jobs:
  cloud-gaming:
    runs-on: windows-2022
    timeout-minutes: 3600

    steps:
      - name: Configure Core RDP Settings
        run: |
          # Enable Remote Desktop and disable Network Level Authentication
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' `
                             -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                             -Name "UserAuthentication" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                             -Name "SecurityLayer" -Value 0 -Force

          # Enable graphics acceleration for RDP
          Set-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Terminal Server\TSAppCompat' `
                             -Name "fEnableHardwareAcceleration" -Value 1 -Force

          # Firewall for RDP
          netsh advfirewall firewall delete rule name="RDP-Tailscale"
          netsh advfirewall firewall add rule name="RDP-Tailscale" dir=in action=allow protocol=TCP localport=3389

          Restart-Service -Name TermService -Force

      - name: Create RDP User with Fixed Password
        run: |
          $username = "RDP"
          $passwordPlain = "882188Adr"
          $securePass = ConvertTo-SecureString $passwordPlain -AsPlainText -Force

          if (-not (Get-LocalUser -Name $username -ErrorAction SilentlyContinue)) {
              New-LocalUser -Name $username -Password $securePass -AccountNeverExpires -PasswordNeverExpires
          } else {
              $user = Get-LocalUser -Name $username
              $user | Set-LocalUser -Password $securePass
          }

          Add-LocalGroupMember -Group "Administrators" -Member $username -ErrorAction SilentlyContinue
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member $username -ErrorAction SilentlyContinue

          echo "RDP_USER=$username" >> $env:GITHUB_ENV
          echo "RDP_PASSWORD=$passwordPlain" >> $env:GITHUB_ENV

      - name: Install Tailscale
        run: |
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi"
          $installerPath = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath
          Start-Process msiexec.exe -ArgumentList "/i", "`"$installerPath`"", "/quiet", "/norestart" -Wait
          Remove-Item $installerPath -Force

      - name: Establish Tailscale Connection
        run: |
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-runner-$env:GITHUB_RUN_ID
          $tsIP = $null
          $retries = 0
          while (-not $tsIP -and $retries -lt 10) {
              $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
              Start-Sleep -Seconds 5
              $retries++
          }
          if (-not $tsIP) { Write-Error "Tailscale IP not assigned"; exit 1 }
          echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV

      - name: Verify RDP Accessibility
        run: |
          Write-Host "Tailscale IP: $env:TAILSCALE_IP"
          $testResult = Test-NetConnection -ComputerName $env:TAILSCALE_IP -Port 3389
          if (-not $testResult.TcpTestSucceeded) { Write-Error "TCP connection failed"; exit 1 }

      - name: Install Discord
        run: |
          $url = "https://discord.com/api/download?platform=win"
          $installer = "$env:TEMP\DiscordSetup.exe"
          Invoke-WebRequest -Uri $url -OutFile $installer
          Start-Process -FilePath $installer -ArgumentList "/S" -Wait
          Remove-Item $installer -Force

      - name: Install Chrome
        run: |
          $url = "https://dl.google.com/chrome/install/latest/chrome_installer.exe"
          $installer = "$env:TEMP\ChromeSetup.exe"
          Invoke-WebRequest -Uri $url -OutFile $installer
          Start-Process -FilePath $installer -ArgumentList "/silent /install" -Wait
          Remove-Item $installer -Force

      - name: Install 7-Zip
        run: |
          $url = "https://www.7-zip.org/a/7z2301-x64.exe"
          $installer = "$env:TEMP\7zip.exe"
          Invoke-WebRequest -Uri $url -OutFile $installer
          Start-Process -FilePath $installer -ArgumentList "/S" -Wait
          Remove-Item $installer -Force

      - name: Install DirectX End-User Runtime
        run: |
          $dxUrl = "https://download.microsoft.com/download/1/1/C/11C0E6C2-2904-4C57-8DAD-94F758DC6D3F/directx_Jun2010_redist.exe"
          $installer = "$env:TEMP\dx_redist.exe"
          Invoke-WebRequest -Uri $dxUrl -OutFile $installer
          Start-Process -FilePath $installer -ArgumentList "/Q /T:$env:TEMP\DXSetup" -Wait
          Start-Process -FilePath "$env:TEMP\DXSetup/DXSETUP.exe" -ArgumentList "/silent" -Wait
          Remove-Item $installer -Force
          Remove-Item "$env:TEMP\DXSetup" -Recurse -Force

      - name: Install Vulkan Runtime
        run: |
          $url = "https://vulkan.lunarg.com/sdk/home"
          Write-Host "Vulkan runtime precisa ser baixado manualmente via link oficial se necessÃ¡rio."

      - name: Install Visual C++ Redistributables
        run: |
          $urls = @(
            "https://aka.ms/vs/17/release/vc_redist.x64.exe",
            "https://aka.ms/vs/17/release/vc_redist.x86.exe"
          )
          foreach ($url in $urls) {
              $installer = "$env:TEMP\vc_redist.exe"
              Invoke-WebRequest -Uri $url -OutFile $installer
              Start-Process -FilePath $installer -ArgumentList "/install /quiet /norestart" -Wait
              Remove-Item $installer -Force
          }

      - name: Install Steam
        run: |
          $url = "https://cdn.cloudflare.steamstatic.com/client/installer/SteamSetup.exe"
          $installer = "$env:TEMP\SteamSetup.exe"
          Invoke-WebRequest -Uri $url -OutFile $installer
          Start-Process -FilePath $installer -ArgumentList "/S" -Wait
          Remove-Item $installer -Force

      - name: Install Epic Games Launcher
        run: |
          $url = "https://launcher-public-service-prod06.ol.epicgames.com/launcher/api/installer/download/EpicGamesLauncherInstaller.msi"
          $installer = "$env:TEMP\EpicInstaller.msi"
          Invoke-WebRequest -Uri $url -OutFile $installer
          Start-Process msiexec.exe -ArgumentList "/i", "`"$installer`"", "/quiet", "/norestart" -Wait
          Remove-Item $installer -Force

      - name: Maintain Connection
        run: |
          Write-Host "`n=== RDP ACCESS ==="
          Write-Host "Address: $env:TAILSCALE_IP"
          Write-Host "Username: $env:RDP_USER"
          Write-Host "Password: $env:RDP_PASSWORD"
          Write-Host "==================`n"
          while ($true) { Start-Sleep -Seconds 300 }
